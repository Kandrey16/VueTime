version: '3'  # Версия синтаксиса Docker Compose

services:  # Определение служб (контейнеров) вашего приложения

  # Служба 'api' - контейнер для вашего API
  api:
    restart: always  # Всегда перезапускать контейнер при его завершении
    build: ./api  # Собирать контейнер из Dockerfile, находящегося в папке './api'
    ports:
      - "5555:5000"  # Проброс порта хоста 5555 на порт контейнера 5000
    depends_on:
      - mysql  # Гарантировать, что контейнер 'api' запускается после контейнера 'mysql'

  # Служба 'frontend' - контейнер для вашего фронтенд-приложения
  frontend:
    restart: always  # Всегда перезапускать контейнер при его завершении
    build: ./frontend  # Собирать контейнер из Dockerfile, находящегося в папке './frontend'
    ports:
      - "8954:8954"  # Проброс порта хоста 8954 на порт контейнера 8954

  # Служба 'mysql' - контейнер для базы данных MySQL
  mysql:
    restart: always  # Всегда перезапускать контейнер при его завершении
    image: mysql  # Использовать официальный образ MySQL
    environment:
      - MYSQL_ROOT_PASSWORD=password  # Задать пароль для root-пользователя MySQL
      - MYSQL_DATABASE=time_db  # Задать имя базы данных MySQL
    volumes:
      - mysql_data:/var/lib/mysql  # Монтировать том 'mysql_data' к директории данных MySQL

  # Служба 'adminer' - контейнер для веб-интерфейса управления базой данных
  adminer:
    restart: always  # Всегда перезапускать контейнер при его завершении
    image: adminer  # Использовать образ Adminer
    ports:
      - 8888:8080  # Проброс порта хоста 8888 на порт контейнера 8080

volumes:  # Определение именованного тома

  # Именованный том 'mysql_data' для хранения данных MySQL
  mysql_data:
